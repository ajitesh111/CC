#include<bits/stdc++.h>
using namespace std;

#define DEBUG(x) do { \
  if (debugging_enabled) { std::cerr << x << std::endl; } \
} while (0)

/*
#include<ext/pb_ds/assoc_container.hpp>
#include<ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
//ordered_set s; s.insert('value');
//s.order_of_key(k) : # of items strictly smaller than 'k'  
//s.find_by_order(x) : iterator to x'th largest element (from ZERO) 
//s.erase("iterator"/entry) : [log(n)] 
//s.end() : bool
//os.find_by_order(os.order_of_key(x)) = iterator to 'x' in the rb tree
template<class T> using ordered_set = tree<T, null_type, less_equal<T>, rb_tree_tag, tree_order_statistics_node_update>;
*/
//#pragma GCC optimization ("unroll-loops")
//#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
//#pragma GCC target ("avx2")
//#pragma GCC optimize ("O3")
#define fast ios_base::sync_with_stdio(false);cin.tie(NULL); cout.tie(NULL);

typedef long long ll;
typedef long double ld;
typedef vector<ll> vi;
typedef pair<ll,ll> pi;
typedef priority_queue<ll> pq;                                        //min-heap-> multiply the values by '-1'
#define f first
#define s second
#define pb push_back
#define mp make_pair
#define forr(i,a,b) for (ll i = a; i < b; i++)
#define test ll t;cin>>t;while(t--)
#define summ(a,n) accumulate(a,a+n,0)
#define bsrch(v,n) lower_bound(v.begin(), v.end(), n)	//also works for strings (lexicographically)
#define minindex(v) distance(v.begin(),min_element(v.begin(),v.end()))     //return index of min/max element in vector
#define bp(x) _builtin_popcount(x)
#define inf 1000000000000
#define PI = 3.1415926535897932384626
#define mod 1000000007


int main()
{
    ll t; cin>>t;
    for(ll i=1; i<t+1; i++)
    {
        
        cout<<"Case #"<<i<<": "<< <<endl;
    }
}